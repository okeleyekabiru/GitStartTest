name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Run Tests
        run: dotnet test

  static_analysis:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Run SonarQube Analysis
        run: dotnet sonarscanner begin /k:"your_project_key" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Build for SonarQube
        run: dotnet build --configuration Release

      - name: End SonarQube Analysis
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

    containerize:
        runs-on: ubuntu-latest
        needs: static_analysis

        steps:
          - name: Checkout Code
            uses: actions/checkout@v2

          - name: Build Docker Image
            run: |
              IMAGE_NAME="ghcr.io/${{ github.repository }}/$(echo "${{ github.sha }}" | cut -c1-7)"
              docker build -t "$IMAGE_NAME:latest" .

          - name: Log in to GitHub Container Registry
            run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

          - name: Push Docker Image
            run: |
              docker push "$IMAGE_NAME:latest"

  deploy:
    runs-on: ubuntu-latest
    needs: containerize

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment-mssql.yaml
          kubectl apply -f k8s/service-mssql.yaml
          kubectl apply -f k8s/deployment-redis.yaml
          kubectl apply -f k8s/service-redis.yaml
          kubectl apply -f k8s/deployment-rabbitmq.yaml
          kubectl apply -f k8s/service-rabbitmq.yaml
          kubectl apply -f k8s/deployment-authentication.yaml
          kubectl apply -f k8s/service-authentication.yaml
          kubectl apply -f k8s/deployment-product.yaml
          kubectl apply -f k8s/service-product.yaml
          kubectl apply -f k8s/deployment-inventory.yaml
          kubectl apply -f k8s/service-inventory.yaml
          kubectl apply -f k8s/ingress.yaml
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/secret.yaml
          kubectl apply -f k8s/hpa.yaml
